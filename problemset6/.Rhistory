# Load standard libraries
library(tidyverse)
100*(100*0.98) - 500*(100 - 100*0.98)
# Load some helpful libraries
library(tidyverse)
data = read.table('https://data.princeton.edu/wws509/datasets/salary.dat')
View(data)
View(data)
data = read.table('https://data.princeton.edu/wws509/datasets/salary.dat', header = T)
View(data)
ggplot(data, aes(x = yr, y = sl)) + geom_point()
plot1 <- ggplot(data, aes(x = yr, y = sl)) + geom_point()
show(plot1)
plot1 <- ggplot(data, aes(x = yr, y = sl)) + geom_point() + xlab("Years in Position") + ylab("Salary ($)") + ggtitle("Salary vs year in position")
show(plot1)
plot1 <- ggplot(data, aes(x = yr, y = sl)) + geom_point() + xlab("Years in Position") + ylab("Salary ($)") + ggtitle("Salary vs Years in position")
show(plot1)
plot1 <- ggplot(data, aes(x = yr, y = sl)) + geom_point() + xlab("Years in Position") + ylab("Salary ($)") + ggtitle("Salary vs Years in Position")
show(plot1)
plot1 <- ggplot(data, aes(x = yr, y = sl)) + geom_point() + xlab("Years in Position") + ylab("Salary ($)") + ggtitle("Salary vs Years in Position")
show(plot1)
correlation <- cor(data$sl, data$yr)
plot1 <- ggplot(data, aes(x = yr, y = sl)) +
geom_point( color = 'blue') +
xlab("Years in Position") +
ylab("Salary ($)") +
ggtitle("Salary vs Years in Position") +
show(plot1)
correlation <- cor(data$sl, data$yr)
plot1 <- ggplot(data, aes(x = yr, y = sl)) +
geom_point( color = 'blue') +
xlab("Years in Position") +
ylab("Salary ($)") +
ggtitle("Salary vs Years in Position")
show(plot1)
correlation <- cor(data$sl, data$yr)
model <- lm(sl ~ yr, data = data)
View(model)
model <- lm(sl ~ yr, data = data)
summary(model)
con_int <-confint(model)
con_int
plot1 <- plot1 +
stat_smooth(method = 'lm', se = F, color = 'red')
plot1
residuals <- model$residuals
residuals <- resid(model)
# Both works
res_plot <- ggplot(data.frame(yr = data$yr,
sl = data$sl,
res =residuals),
aes(x = yr, y = res)) +
geom_point(color = 'green')
residuals <- model$residuals
residuals <- resid(model)
# Both works
res_plot <- ggplot(data.frame(yr = data$yr,
sl = data$sl,
res =residuals),
aes(x = yr, y = res)) +
geom_point(color = 'green')+
xlab("Years in Position") +
ylab("Salary ($)") +
ggtitle("Salary vs Years in Position")
show(res_plot)
residuals <- model$residuals
residuals <- resid(model)
# Both works
res_plot <- ggplot(data.frame(yr = data$yr,
sl = data$sl,
res =residuals),
aes(x = yr, y = res)) +
geom_point(color = 'green')+
xlab("Years in Position") +
ylab("Salary ($)") +
ggtitle("Residual Plot 1")
show(res_plot)
residuals <- model$residuals
residuals <- resid(model)
# Both works
res_plot <- ggplot(data.frame(yr = data$yr,
sl = data$sl,
res =residuals),
aes(x = sl, y = res)) +
geom_point(color = 'green')+
xlab("Years in Position") +
ylab("Salary ($)") +
ggtitle("Residual Plot 1")
show(res_plot)
dbinom(101, size = 101, prob = 0.98)
dbinom(102, size = 102, prob = 0.98)
dbinom(101, size = 102, prob = 0.98)
# import the data
fatherson <- read.csv("/Users/Jay/Desktop/J/Working on/MSIM/IMT573/problem set/problemset5/fatherson.csv",
header = FALSE, skip = 1, sep = "")
colnames(fatherson) <- c("fheight", "sheight")
# summary statistics
summary(fatherson)
# structure
str(fatherson)
# check missing values
isna(fatherson) %>%
apply(2, sum)
# import the data
fatherson <- read.csv("/Users/Jay/Desktop/J/Working on/MSIM/IMT573/problem set/problemset5/fatherson.csv",
header = FALSE, skip = 1, sep = "")
colnames(fatherson) <- c("fheight", "sheight")
# summary statistics
summary(fatherson)
# structure
str(fatherson)
# check missing values
is.na(fatherson) %>%
apply(2, sum)
sum_stat <- function(x){
res <- data.frame(
Mean = mean(x),
Median = median(x),
Mode = names(sort(-table(x)))[1],
SD = sd(x),
Range = max(x) - min(x))
return(res)
}
# apply(fatherson, 2, sum_stat)
fatherson$fheight %>%
sum_stat()
ggplot(fatherson, aes(x = fheight)) +
geom_histogram(aes(y = ..density..), color = 1, fill = 'white', bins = 20)+
labs(title = "Histogram of fheight (fathers' heights)")+
# normal distribution
stat_function(fun = dnorm, args = list(mean = mean(fatherson$fheight), sd = sd((fatherson$height))))+
# mean
geom_vline(aes(xintercept = mean(fatherson$height), color = "mean")) +
geom_vline(aes(xintercept = median(fatherson$fheight), color = "median"))+
# legend
scale_color_manual(name = "statistics", values = c(mean = "blue", median = "red"))
ggplot(fatherson, aes(x = fheight)) +
geom_histogram(aes(y = ..density..), color = 1, fill = 'white', bins = 20)+
labs(title = "Histogram of fheight (fathers' heights)")+
# normal distribution
stat_function(fun = dnorm, args = list(mean = mean(fatherson$fheight), sd = sd(fatherson$height)))+
# mean
geom_vline(aes(xintercept = mean(fatherson$height), color = "mean")) +
geom_vline(aes(xintercept = median(fatherson$fheight), color = "median"))+
# legend
scale_color_manual(name = "statistics", values = c(mean = "blue", median = "red"))
# import the data
mag_in_citations <- read.csv("/Users/Jay/Desktop/J/Working on/MSIM/IMT573/problem set/problemset5/mag-in-citations.csv")
# summary statistics
summary(mag_in_citations)
# structure
str(mag_in_citations)
# check missing values
is.na(mag_in_citations) %>%
apply(2, sum)
# count range
range(mag_in_citations$citations)
sum_stat(mag_in_citations)
sum_stat(mag_in_citations$citations)
ggplot(mag_in_citations, aes(x = citations)) +
# histogram
geom_histogram(aes(y= ..density..), color = 1, fill = 'white') +
xlim(-200, 200) +
# normal distribution
stat_function(fun = dnorm, args = list(mean = mean(mag_in_citations$citations), sd = sd(mag_in_citations$citations))) +
# mean
geom_vline(aex(xintercept = mean(mag_in_citations$citations), color = "mean"))+
geom_vline(aes(xintercept = median(mag_in_citations$citations), color = "median"))+
# legend
scale_color_manual(name = "statistics", values = c(mean = "blue", median = "red"))
ggplot(mag_in_citations, aes(x = citations)) +
# histogram
geom_histogram(aes(y= ..density..), color = 1, fill = 'white') +
xlim(-200, 200) +
# normal distribution
stat_function(fun = dnorm, args = list(mean = mean(mag_in_citations$citations), sd = sd(mag_in_citations$citations))) +
# mean
geom_vline(aes(xintercept = mean(mag_in_citations$citations), color = "mean"))+
geom_vline(aes(xintercept = median(mag_in_citations$citations), color = "median"))+
# legend
scale_color_manual(name = "statistics", values = c(mean = "blue", median = "red"))
#mag_in_citations$log_citations <- ifelse(mag_in_citations$citations == 0, 0, log(mag_in_citations$citations))
ggplot(mag_in_citations, aex(x= log(citations))) +
# histogram
geom_histogram(aes(y = ..density..), color = 1, fill = "white", binds = 30) +
# normal distribution
stat_function(fun = dnorm, args = list(mean = log(mean(mag_in_citations$citations)), sd = log(sd(mag_in_citations))))+
geom_vline(aes(xintercept = log(mean(mag_in_citations$citations)), color = "mean")) +
geom_vline(aes(xintercept = log(median(mag_in_citations$citations)), color = "median")) +
scale_color_manual(name = "statistics", values = c(mean = "blue", median = "red"))
#mag_in_citations$log_citations <- ifelse(mag_in_citations$citations == 0, 0, log(mag_in_citations$citations))
ggplot(mag_in_citations, aes(x= log(citations))) +
# histogram
geom_histogram(aes(y = ..density..), color = 1, fill = "white", binds = 30) +
# normal distribution
stat_function(fun = dnorm, args = list(mean = log(mean(mag_in_citations$citations)), sd = log(sd(mag_in_citations))))+
geom_vline(aes(xintercept = log(mean(mag_in_citations$citations)), color = "mean")) +
geom_vline(aes(xintercept = log(median(mag_in_citations$citations)), color = "median")) +
scale_color_manual(name = "statistics", values = c(mean = "blue", median = "red"))
#mag_in_citations$log_citations <- ifelse(mag_in_citations$citations == 0, 0, log(mag_in_citations$citations))
ggplot(mag_in_citations, aes(x= log(citations))) +
# histogram
geom_histogram(aes(y = ..density..), color = 1, fill = "white", bins = 30) +
# normal distribution
stat_function(fun = dnorm, args = list(mean = log(mean(mag_in_citations$citations)), sd = log(sd(mag_in_citations))))+
geom_vline(aes(xintercept = log(mean(mag_in_citations$citations)), color = "mean")) +
geom_vline(aes(xintercept = log(median(mag_in_citations$citations)), color = "median")) +
scale_color_manual(name = "statistics", values = c(mean = "blue", median = "red"))
#mag_in_citations$log_citations <- ifelse(mag_in_citations$citations == 0, 0, log(mag_in_citations$citations))
ggplot(mag_in_citations, aes(x= log(citations))) +
# histogram
geom_histogram(aes(y = ..density..), color = 1, fill = "white", bins = 30) +
labs(title = "Histogram of citations (citation counts)")+
# normal distribution
stat_function(fun = dnorm, args = list(mean = log(mean(mag_in_citations$citations)), sd = log(sd(mag_in_citations$citations)))) +
geom_vline(aes(xintercept = log(mean(mag_in_citations$citations)), color = "mean")) +
geom_vline(aes(xintercept = log(median(mag_in_citations$citations)), color = "median")) +
scale_color_manual(name = "statistics", values = c(mean = "blue", median = "red"))
