# Load some helpful libraries for this course
library(tidyverse)
library(dplyr)
library(ggplot2)
# Load standard libraries
library(tidyverse)
library(gridExtra)
1
data(state)
?state
# Min and max wait times for back-up that happens every 30 min
min <- 0
max <- 30
# Calculate probability of waiting less than 5 mins
prob_less_than_5 <- punif(5, min, max)
prob_less_than_5
state_data <- data.frame(abb = state.abb,
area = state.area,
center_x = state.center[1],
center_y = state.center[2],
division = state.division,
name = state.name,
region = state.region) %>%
cbind(state.x77)
# Calculate probability of waiting 10-20 mins
prob_less_than_10 <- punif(10, min,max)
# Calculate probability of waiting 10-20 mins
prob_less_than_10 <- punif(10, min,max)
prob_less_than_10
# Calculate probability of waiting 10-20 mins
prob_less_than_10 <- punif(10, min,max)
prob_less_than_20 <- punif(20, min,max)
prob_between_10_and_20 <- prob_less_than_20 - prob_less_than_10
# Calculate probability of waiting 10-20 mins
prob_less_than_10 <- punif(10, min,max)
prob_less_than_20 <- punif(20, min,max)
prob_between_10_and_20 <- prob_less_than_20 - prob_less_than_10
prob_between_10_and_20
# Calculate probability of waiting 10-20 mins
prob_less_than_10 <- punif(10, min,max)
prob_less_than_20 <- punif(20, min,max)
prob_between_10_and_20 <- prob_less_than_20 - prob_less_than_10
prob_between_10_and_20
dunif(1, min, max)
dunif(0, min, max)
# Calculate probability of waiting 10-20 mins
prob_less_than_10 <- punif(10, min,max)
prob_less_than_20 <- punif(20, min,max)
prob_between_10_and_20 <- prob_less_than_20 - prob_less_than_10
prob_between_10_and_20
sum(dunif(seq(10, 19), min, max))
# Calculate probability of waiting 10-20 mins
prob_less_than_10 <- punif(10, min,max)
prob_less_than_20 <- punif(20, min,max)
prob_between_10_and_20 <- prob_less_than_20 - prob_less_than_10
prob_between_10_and_20
sum(dunif(seq(10, 19), min, max))
qunif(0.5, min, max)
# Calculate probability of waiting 10-20 mins
prob_less_than_10 <- punif(10, min,max)
prob_less_than_20 <- punif(20, min,max)
prob_between_10_and_20 <- prob_less_than_20 - prob_less_than_10
prob_between_10_and_20
sum(dunif(seq(10, 19), min, max))
qunif(1/3, min, max)
# structure
str(state_data)
# summary statistics
summary(state_data)
library(ggcorrplot)
library(ggcorrplot)
library(ggcorrplot)
ggcorrplot(cor(state_data[.8:15]),
title = 'Correlation Matrix',
type = 'lower',
lab = TRUE)
library(ggcorrplot)
ggcorrplot(cor(state_data[,8:15]),
title = 'Correlation Matrix',
type = 'lower',
lab = TRUE)
# Set random seed to 10
set.seed(10) #setting seed allows you to reproduce the result
# Simulate a single deal, 1 deal 1 time (similar to 1 flip 1 time)
rbinom(1, 1, 0.3)
# Simulate 1 week of 3 deals (similar to many flips 1 time)
rbinom(1, 3, 0.3)
# Simulate 52 weeks of 3 deals  (similar to many flips many times)
deals <- rbinom(52, 3, 0.3)
# Calculate mean deals won per week
mean(deals)
# Probability of closing 3 out of 3 deals
dbinom(3, 3, 0.3)
# Probability of closing <= 1 deal out of 3 deals
pbinom(1, 3, 0.3)
# Probability of closing > 1 deal out of 3 deals
dbinom(0, 3, 0.3) + dbinom(1, 3, 0.3)
sum(dbinom(c(0.1), 3, 0.3))
# Set random seed to 10
set.seed(10) #setting seed allows you to reproduce the result
# Simulate a single deal, 1 deal 1 time (similar to 1 flip 1 time)
rbinom(1, 1, 0.3)
# Simulate 1 week of 3 deals (similar to many flips 1 time)
rbinom(1, 3, 0.3)
# Simulate 52 weeks of 3 deals  (similar to many flips many times)
deals <- rbinom(52, 3, 0.3)
# Calculate mean deals won per week
mean(deals)
# Probability of closing 3 out of 3 deals
dbinom(3, 3, 0.3)
# Probability of closing <= 1 deal out of 3 deals
pbinom(1, 3, 0.3)
dbinom(0, 3, 0.3) + dbinom(1, 3, 0.3)
sum(dbinom(c(0.1), 3, 0.3))
# Probability of closing > 1 deal out of 3 deals
1- pbinom(1, 3, 0.3)
# Probability of sale < 7500
pnorm(7500, mean = 5000, sd = 2000)
# Probability of deal > 1000
# Hint: Set the lower.tail argument to FALSE to get the probability of a deal greater than some amount.
1- pnorm(1000, mean = 5000, sd = 2000)
pnorm(1000, mean= 5000, sd = 2000, lower.tail = FALSE)
# Probability of deal between 3000 and 7000
pnorm(7000, mean = 5000, sd = 2000) - pnorm(3000, mean = 5000, sd = 2000)
# Calculate amount that 75% of deals will be more than
qnorm(0.75, mean = 5000, sd = 2000, lower.tail = FALSE)
# Probability of sale < 7500
pnorm(7500, mean = 5000, sd = 2000)
# Probability of deal > 1000
# Hint: Set the lower.tail argument to FALSE to get the probability of a deal greater than some amount.
1- pnorm(1000, mean = 5000, sd = 2000)
pnorm(1000, mean= 5000, sd = 2000, lower.tail = FALSE)
# Probability of deal between 3000 and 7000
pnorm(7000, mean = 5000, sd = 2000) - pnorm(3000, mean = 5000, sd = 2000)
# Calculate amount that 75% of deals will be more than
qnorm(0.75, mean = 5000, sd = 2000, lower.tail = FALSE)
qnorm(0.5, mean = 5000, sd = 2000)
library(maps)
library(maps)
library(mapdata)
library(magrittr)
library(maps)
library(mapdata)
library(magrittr)
state_data$name %<>%
tolower()
# combine the data with US map information
dt <- map_data("state") %>%
left_join(state_data, by = c("region" = "name"))
ggplot(data = dt, aes(x= long, y= lat, fill = Murder, group = region)) +
geom_polygon(color = "white") +
scale_fill_distiller("Murder") +
guides()+
ggtitle("Murder rate map")
library(maps)
library(mapdata)
library(magrittr)
state_data$name %<>%
tolower()
# combine the data with US map information
dt <- map_data("state") %>%
left_join(state_data, by = c("region" = "name"))
ggplot(data = dt, aes(x= long, y= lat, fill = Murder, group = region)) +
geom_polygon(color = "white") +
scale_fill_distiller("Murder") +
ggtitle("Murder rate map")
# import the data
joint_data <- read.csv("/Users/Jay/Desktop/J/Working on/MSIM/IMT573/problem set/problemset4/joined_data.csv")
#summary(join_data)
#str(joint_data)
colnames(joint_data)
joint_data$Count <- 1
joint_data$Year <- joint_data$Occurred.Date %>%
str_sub(start = 7L, end = 10L)
tab <- aggregate(Count ~ Year + Beat, data = joint_data, FUN = sum)
View(tab)
ggplot(tab, aes(x = Year, y = Count, fill = Beat, group = Beat))+
geom_area()+
theme_minimal()+
labs(title = "Number of rimes in different beat")
ggplot(tab, aes(x = Year, y = Count, fill = Beat, group = Beat))+
geom_area()+
theme_minimal()+
labs(title = "Number of rimes in different beat")
View(joint_data)
library(reshape)
library(reshape)
cast(tab, Year~Beat, value.var = "Count")
ggplot(tab, aes(x = Year, y = Count, fill = Beat, group = Beat))+
geom_area()+
theme_minimal()+
labs(title = "Number of crimes in different beat")
ggplot(tab, aes(x = Year, y = Count, fill = Beat, group = Beat))+
geom_area()+
theme_minimal()+
labs(title = "Number of crimes in different beat")
